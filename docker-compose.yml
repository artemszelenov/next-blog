services:
  # payload:
  #   container_name: payload
  #   image: node:18-alpine
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - .:/home/node/app
  #     - node_modules:/home/node/app/node_modules
  #   working_dir: /home/node/app/
  #   command: sh -c "corepack enable && corepack prepare pnpm@latest --activate && pnpm install && pnpm dev"
  #   depends_on:
  #     - postgres
  #   env_file:
  #     - .env.development

  postgres:
    container_name: postgres
    image: postgres:16.2-alpine3.19
    ports:
      - '4444:5432'
    environment:
      POSTGRES_DB: next-tz
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d next-tz']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

volumes:
  pgdata:
  node_modules:
